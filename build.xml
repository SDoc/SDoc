<project name="SDoc" default="build" basedir=".">
    <taskdef name="readSemanticVersion" classname="\SetBased\Phing\Task\ReadSemanticVersionTask"/>
    <property name="BUILD_DIR" value="./build"/>
    <property name="ANTLR4" value="/usr/local/lib/antlr-4.13.2-complete.jar"/>
    <property name="GRUN" value="java org.antlr.v4.gui.TestRig"/>

    <!-- Run composer update and executes various other updates -->
    <target name="composer-update">
        <exec command="composer update" checkreturn="true" passthru="true"/>
    </target>

    <!-- Install virtual environment -->
    <target name="venv">
        <exec executable="python3" checkreturn="true" passthru="true">
            <arg value="-m"/>
            <arg value="venv"/>
            <arg value=".venv"/>
        </exec>
        <exec executable="./.venv/bin/python" checkreturn="true" passthru="true">
            <arg value="-m"/>
            <arg value="pip"/>
            <arg value="install"/>
            <arg value="--upgrade"/>
            <arg value="pip"/>
        </exec>
        <exec executable="./.venv/bin/python" checkreturn="true" passthru="true">
            <arg value="-m"/>
            <arg value="pip"/>
            <arg value="install"/>
            <arg value="--upgrade"/>
            <arg value="poetry"/>
        </exec>
        <exec executable="./.venv/bin/poetry" passthru="true" checkreturn="true">
            <arg value="--ansi"/>
            <arg value="lock"/>
        </exec>
        <exec executable="./.venv/bin/poetry" passthru="true" checkreturn="true">
            <arg value="--ansi"/>
            <arg value="install"/>
            <arg value="--no-root"/>
        </exec>
        <exec executable="./.venv/bin/poetry" passthru="true" checkreturn="true">
            <arg value="--ansi"/>
            <arg value="show"/>
            <arg value="--outdated"/>
        </exec>
    </target>

    <!-- Creates a new version/release. -->
    <!-- @todo replace semantic version with pep-396 -->
    <target name="version">
        <readSemanticVersion file=".version"
                             versionProperty="VERSION"
                             haltOnError="true"/>
        <reflexive>
            <fileset dir=".">
                <include name="pyproject.toml"/>
            </fileset>
            <filterchain>
                <replaceregexp>
                    <regexp pattern="version = .*" replace="version = &quot;${VERSION}&quot;"/>
                </replaceregexp>
            </filterchain>
        </reflexive>
        <exec executable="git" checkreturn="true" passthru="true">
            <arg value="commit"/>
            <arg value="-a"/>
            <arg value="-m"/>
            <arg value="Release: ${VERSION}"/>
        </exec>
        <exec executable="git" checkreturn="true" passthru="true">
            <arg value="push"/>
        </exec>
        <exec executable="git" checkreturn="true" passthru="true">
            <arg value="tag"/>
            <arg value="${VERSION}"/>
        </exec>
        <exec executable="git" checkreturn="true" passthru="true">
            <arg value="push"/>
            <arg value="origin"/>
            <arg value="${VERSION}"/>
        </exec>
    </target>

    <!-- Creates a new distribution using pyproject.toml -->
    <target name="dist">
        <exec executable="./.venv/bin/poetry" passthru="true" checkreturn="true">
            <arg value="build"/>
        </exec>
    </target>

    <!-- Uploads a distribution to PyPI -->
    <target name="upload">
        <exec executable="./.venv/bin/poetry" passthru="true" checkreturn="true">
            <arg value="publish"/>
        </exec>
    </target>

    <!-- All steps for releasing a new version -->
    <target name="release" depends="version,dist,upload"/>
    
    <target name="antlr1">
        <exec executable="java" passthru="true" checkreturn="true">
            <arg value="-jar"/>
            <arg value="${ANTLR4}"/>
            <arg value="-Dlanguage=Python3"/>
            <arg value="-visitor"/>
            <arg value="-no-listener"/>
            <arg value="-lib"/>
            <arg value="sdoc/antlr"/>
            <arg value="sdoc/antlr/sdoc1Lexer.g4"/>
        </exec>
        <exec executable="java" passthru="true" checkreturn="true">
            <arg value="-jar"/>
            <arg value="${ANTLR4}"/>
            <arg value="-Dlanguage=Python3"/>
            <arg value="-visitor"/>
            <arg value="-no-listener"/>
            <arg value="-lib"/>
            <arg value="sdoc/antlr"/>
            <arg value="sdoc/antlr/sdoc1Parser.g4"/>
        </exec>
        <exec executable="java" passthru="true" checkreturn="true">
            <arg value="-jar"/>
            <arg value="${ANTLR4}"/>
            <arg value="-Dlanguage=Python3"/>
            <arg value="-visitor"/>
            <arg value="-no-listener"/>
            <arg value="-lib"/>
            <arg value="sdoc/antlr"/>
            <arg value="sdoc/antlr/sdoc1Lexer.g4"/>
        </exec>
        <exec executable="java" passthru="true" checkreturn="true">
            <arg value="-jar"/>
            <arg value="${ANTLR4}"/>
            <arg value="-Dlanguage=Python3"/>
            <arg value="-visitor"/>
            <arg value="-no-listener"/>
            <arg value="-lib"/>
            <arg value="sdoc/antlr"/>
            <arg value="sdoc/antlr/sdoc1Parser.g4"/>
        </exec>
    </target>

    <target name="antlr2">
        <exec executable="java" passthru="true" checkreturn="true">
            <arg value="-jar"/>
            <arg value="${ANTLR4}"/>
            <arg value="-Dlanguage=Python3"/>
            <arg value="-visitor"/>
            <arg value="-no-listener"/>
            <arg value="-lib"/>
            <arg value="sdoc/antlr"/>
            <arg value="sdoc/antlr/sdoc2Lexer.g4"/>
        </exec>
        <exec executable="java" passthru="true" checkreturn="true">
            <arg value="-jar"/>
            <arg value="${ANTLR4}"/>
            <arg value="-Dlanguage=Python3"/>
            <arg value="-visitor"/>
            <arg value="-no-listener"/>
            <arg value="-lib"/>
            <arg value="sdoc/antlr"/>
            <arg value="sdoc/antlr/sdoc2Parser.g4"/>
        </exec>
    </target>

    <target name="antlr" depends="antlr1,antlr2"/>

    <target name="grun-test1" depends="antlr1">
        <exec command="java -jar ${ANTLR4} -lib sdoc/antlr sdoc/antlr/sdoc1Lexer.g4" passthru="true" checkreturn="true"/>
        <exec command="java -jar ${ANTLR4} -lib sdoc/antlr sdoc/antlr/sdoc1Parser.g4" passthru="true" checkreturn="true"/>
        <exec command="javac sdoc/antlr/sdoc1*.java" passthru="true" checkreturn="true"/>
        <exec command="cd sdoc/antlr; ${GRUN} sdoc1 sdoc -gui ../../test1.sdoc" passthru="true" checkreturn="true"/>
        <delete>
            <fileset dir="sdoc/antlr">
                <include name="*.java"/>
                <include name="*.class"/>
            </fileset>
        </delete>
    </target>

    <target name="grun-test2" depends="antlr2">
        <exec command="java -jar ${ANTLR4} -lib sdoc/antlr sdoc/antlr/sdoc2Lexer.g4" passthru="true" checkreturn="true"/>
        <exec command="java -jar ${ANTLR4} -lib sdoc/antlr sdoc/antlr/sdoc2Parser.g4" passthru="true" checkreturn="true"/>
        <exec command="javac sdoc/antlr/sdoc2*.java" passthru="true" checkreturn="true"/>
        <exec command="cd sdoc/antlr; ${GRUN} sdoc2 sdoc -gui ../../test2.sdoc" passthru="true" checkreturn="true"/>
        <delete>
            <fileset dir="sdoc/antlr">
                <include name="*.java"/>
                <include name="*.class"/>
            </fileset>
        </delete>
    </target>

    <!-- Runs all unit tests-->
    <target name="unit">
        <exec executable="./.venv/bin/python" checkreturn="true" passthru="true">
            <arg value="-m"/>
            <arg value="coverage"/>
            <arg value="run"/>
            <arg value="-m"/>
            <arg value="unittest"/>
            <arg value="discover"/>
            <arg value="-s"/>
            <arg value="test"/>
            <arg value="-p"/>
            <arg value="\*Test.py"/>
        </exec>
        <exec executable="./.venv/bin/python" checkreturn="true" passthru="true">
            <arg value="-m"/>
            <arg value="coverage"/>
            <arg value="html"/>
        </exec>
        <delete>
            <fileset dir="test">
                <include name="**/*.actual.scad"/>
            </fileset>
        </delete>
    </target>

    <!-- Default target -->
    <target name="build">
        <echo msg="And Now for Something Completely Different"/>
    </target>
</project>
