<project name="SDoc" default="build" basedir=".">
    <taskdef name="ReadSemanticVersion" classname="vendor.setbased.phing-extensions.src.Task.ReadSemanticVersionTask"/>
    <property name="BUILD_DIR" value="./build"/>
    <property name="ANTLR4" value="/usr/local/lib/antlr-4.12.0-complete.jar"/>
    <property name="GRUN" value="java org.antlr.v4.gui.TestRig"/>

    <!-- Run composer update and executes various other updates -->
    <target name="composer-update">
        <exec command="composer update" checkreturn="true" passthru="true"/>
    </target>

    <!-- Creates a new version/release. -->
    <!-- @todo replace semantic version with pep-396 -->
    <target name="version">
        <readSemanticVersion file=".version" versionProperty="VERSION" haltOnError="true"/>

        <reflexive>
            <fileset dir=".">
                <include name="setup.py"/>
            </fileset>
            <filterchain>
                <replaceregexp>
                    <regexp pattern="version=.*" replace="version='${VERSION}',"/>
                </replaceregexp>
            </filterchain>
        </reflexive>
        <reflexive>
            <fileset dir=".">
                <include name="sdoc/application/SdocApplication.py"/>
            </fileset>
            <filterchain>
                <replaceregexp>
                    <regexp pattern="Application.__init__\(self, 'SDoc', .*"
                            replace="Application.__init__(self, 'SDoc', '${VERSION}')"/>
                </replaceregexp>
            </filterchain>
        </reflexive>
        <gitcommit repository="." message="Release: ${VERSION}" allFiles="true"/>
        <gitpush repository="."/>
        <gittag repository="." name="${VERSION}"/>
        <gitpush repository="." refspec="${VERSION}" quiet="false"/>
    </target>

    <!-- Creates a new distribution using setup.py -->
    <target name="dist">
        <exec command="python3 setup.py sdist" passthru="true" checkreturn="true"/>
    </target>

    <!-- Uploads a distribution to PyPI -->
    <target name="upload">
        <loadfile property="VERSION" file=".version"/>
        <exec command="twine upload dist/SDoc-${VERSION}.tar.gz" passthru="true" checkreturn="true"/>
    </target>

    <!-- All steps for releasing a new version -->
    <target name="release" depends="version,dist,upload"/>
    
    <target name="antlr1">
        <exec executable="java" passthru="true" checkreturn="true">
            <arg value="-jar"/>
            <arg value="${ANTLR4}"/>
            <arg value="-Dlanguage=Python3"/>
            <arg value="-visitor"/>
            <arg value="-no-listener"/>
            <arg value="-lib"/>
            <arg value="sdoc/antlr"/>
            <arg value="sdoc/antlr/sdoc1Lexer.g4"/>
        </exec>
        <exec executable="java" passthru="true" checkreturn="true">
            <arg value="-jar"/>
            <arg value="${ANTLR4}"/>
            <arg value="-Dlanguage=Python3"/>
            <arg value="-visitor"/>
            <arg value="-no-listener"/>
            <arg value="-lib"/>
            <arg value="sdoc/antlr"/>
            <arg value="sdoc/antlr/sdoc1Parser.g4"/>
        </exec>
        <exec executable="java" passthru="true" checkreturn="true">
            <arg value="-jar"/>
            <arg value="${ANTLR4}"/>
            <arg value="-Dlanguage=Python3"/>
            <arg value="-visitor"/>
            <arg value="-no-listener"/>
            <arg value="-lib"/>
            <arg value="sdoc/antlr"/>
            <arg value="sdoc/antlr/sdoc1Lexer.g4"/>
        </exec>
        <exec executable="java" passthru="true" checkreturn="true">
            <arg value="-jar"/>
            <arg value="${ANTLR4}"/>
            <arg value="-Dlanguage=Python3"/>
            <arg value="-visitor"/>
            <arg value="-no-listener"/>
            <arg value="-lib"/>
            <arg value="sdoc/antlr"/>
            <arg value="sdoc/antlr/sdoc1Parser.g4"/>
        </exec>
    </target>

    <target name="antlr2">
        <exec executable="java" passthru="true" checkreturn="true">
            <arg value="-jar"/>
            <arg value="${ANTLR4}"/>
            <arg value="-Dlanguage=Python3"/>
            <arg value="-visitor"/>
            <arg value="-no-listener"/>
            <arg value="-lib"/>
            <arg value="sdoc/antlr"/>
            <arg value="sdoc/antlr/sdoc2Lexer.g4"/>
        </exec>
        <exec executable="java" passthru="true" checkreturn="true">
            <arg value="-jar"/>
            <arg value="${ANTLR4}"/>
            <arg value="-Dlanguage=Python3"/>
            <arg value="-visitor"/>
            <arg value="-no-listener"/>
            <arg value="-lib"/>
            <arg value="sdoc/antlr"/>
            <arg value="sdoc/antlr/sdoc2Parser.g4"/>
        </exec>
    </target>

    <target name="antlr" depends="antlr1,antlr2"/>

    <target name="grun-test1" depends="antlr1">
        <exec command="java -jar ${ANTLR4} -lib sdoc/antlr sdoc/antlr/sdoc1Lexer.g4" passthru="true" checkreturn="true"/>
        <exec command="java -jar ${ANTLR4} -lib sdoc/antlr sdoc/antlr/sdoc1Parser.g4" passthru="true" checkreturn="true"/>
        <exec command="javac sdoc/antlr/sdoc1*.java" passthru="true" checkreturn="true"/>
        <exec command="cd sdoc/antlr; ${GRUN} sdoc1 sdoc -gui ../../test1.sdoc" passthru="true" checkreturn="true"/>
        <delete>
            <fileset dir="sdoc/antlr">
                <include name="*.java"/>
                <include name="*.class"/>
            </fileset>
        </delete>
    </target>

    <target name="grun-test2" depends="antlr2">
        <exec command="java -jar ${ANTLR4} -lib sdoc/antlr sdoc/antlr/sdoc2Lexer.g4" passthru="true" checkreturn="true"/>
        <exec command="java -jar ${ANTLR4} -lib sdoc/antlr sdoc/antlr/sdoc2Parser.g4" passthru="true" checkreturn="true"/>
        <exec command="javac sdoc/antlr/sdoc2*.java" passthru="true" checkreturn="true"/>
        <exec command="cd sdoc/antlr; ${GRUN} sdoc2 sdoc -gui ../../test2.sdoc" passthru="true" checkreturn="true"/>
        <delete>
            <fileset dir="sdoc/antlr">
                <include name="*.java"/>
                <include name="*.class"/>
            </fileset>
        </delete>
    </target>

    <!-- Runs all unit tests-->
    <target name="unit">
        <exec command="venv/bin/coverage3 run -m unittest discover -s test -p *Test.py" passthru="true" checkreturn="true"/>
        <exec command="venv/bin/coverage3 html" passthru="true" checkreturn="true"/>
    </target>

    <!-- Default target -->
    <target name="build">
        <echo msg="And Now for Something Completely Different"/>
    </target>
</project>
